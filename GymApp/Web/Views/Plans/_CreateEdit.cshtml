@using Domain
@model Web.ViewModels.PlanCreateEditViewModel
    
<div class="form-group">
    @Html.LabelFor(model => model.Plan.PlanName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Plan.PlanName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Plan.PlanName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PlanDescription, "PlanDescriptionId", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.PlanDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PlanDescription, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PlanInstructions, "PlanInstructionsId", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.PlanInstructions, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PlanInstructions, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Plan.PlanTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.Plan.PlanTypeId, Model.PlanTypeSelectList, "-- Select --", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Plan.PlanTypeId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Plan.Duration, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.Plan.Duration, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.Plan.Duration, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Workout.WorkoutName, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.Workout.WorkoutName, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.Workout.WorkoutName, "", new {@class = "text-danger"})
    </div>
</div>
    @for (int i = 0; i <= 1; i++)
    {
        Model.ExerciseInWorkoutList.Add(new ExerciseInWorkout());
        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseInWorkoutList[i].ExerciseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.DropDownListFor(model => model.ExerciseInWorkoutList[i].ExerciseId, Model.ExerciseSelectList, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExerciseInWorkoutList[i].ExerciseId, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ExerciseInWorkoutList[i].Sets, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ExerciseInWorkoutList[i].Sets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExerciseInWorkoutList[i].Sets, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @*@for (int j = 1; j <= 2; j++)
        {
            <div id="workout">
                <div class="form-group">
                    @Html.LabelFor(model => model.WorkoutInPlanList[j].Workout.WorkoutName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkoutInPlanList[j].Workout.WorkoutName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkoutInPlanList[j].Workout.WorkoutName, "", new { @class = "text-danger" })
                    </div>
                </div>
                @for (int i = 1; i <= 2; i++)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExerciseInWorkoutList[i].Exercise.ExerciseId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.DropDownListFor(model => model.ExerciseInWorkoutList[i].Exercise.ExerciseId, Model.ExerciseSelectList, "-- Select --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ExerciseInWorkoutList[i].Exercise.ExerciseId, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.ExerciseInWorkoutList[i].Sets, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.ExerciseInWorkoutList[i].Sets, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExerciseInWorkoutList[i].Sets, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
        }*@



